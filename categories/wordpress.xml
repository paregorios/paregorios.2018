<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>paregorios.org (Posts about wordpress)</title><link>https://paregorios.org/</link><description></description><atom:link href="https://paregorios.org/categories/wordpress.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2018 &lt;a href="mailto:ipse@paregorios.org"&gt;Tom Elliott&lt;/a&gt; 
&lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;&lt;img
alt="Creative Commons License" style="border-width:0"
src="https://i.creativecommons.org/l/by/4.0/80x15.png" /&gt;&lt;/a&gt;
&lt;span xmlns:dct="http://purl.org/dc/terms/"
property="dct:title"&gt;&lt;strong&gt;&lt;em&gt;paregorios.org&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt; by
&lt;a xmlns:cc="http://creativecommons.org/ns#" href="https://paregorios.org/me"
property="cc:attributionName" rel="cc:attributionURL"&gt;Tom Elliott&lt;/a&gt; is
licensed under a &lt;a rel="license"
href="http://creativecommons.org/licenses/by/4.0/"&gt;Creative Commons
Attribution 4.0 International License&lt;/a&gt;.
</copyright><lastBuildDate>Sun, 06 May 2018 11:48:11 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>What Zotero Wants From My Blog</title><link>https://paregorios.org/posts/2018/04/what-zotero-wants/</link><dc:creator>Tom Elliott</dc:creator><description>&lt;div&gt;&lt;p&gt;So, I'm on a quest to get my blog to play well with &lt;a href="https://zotero.org"&gt;&lt;em&gt;Zotero&lt;/em&gt;&lt;/a&gt;. Today I come to grips with the translator code that &lt;em&gt;Zotero&lt;/em&gt; uses to create a record from a blog entry.&lt;!-- TEASER_END --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://paregorios.org/posts/2018/04/blogs-work-zotero/"&gt;In the first report from the field&lt;/a&gt;, I did some comparative metadata investigations to see why some (&lt;a href="https://wordpress.org/"&gt;&lt;em&gt;WordPress&lt;/em&gt;&lt;/a&gt;) blogs worked well with the &lt;em&gt;Zotero&lt;/em&gt; browser plugin, but mine (built with the &lt;a href="https://getnikola.com"&gt;&lt;em&gt;Nikola&lt;/em&gt; static site generator&lt;/a&gt;) didn't. There was nothing super-obvious in the &lt;abbr title="HyperText Markup Language"&gt;HTML&lt;/abbr&gt; metadata, but I was suspicious that the mere fact of being &lt;em&gt;WordPress&lt;/em&gt; or not might have something to do with it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/zotero/translators"&gt;The &lt;em&gt;Zotero&lt;/em&gt; developer community puts its translator code on &lt;em&gt;GitHub&lt;/em&gt; in a public repository&lt;/a&gt;, so we can look at it directly. There are multiple translators, some keyed to particular domains. The one that's getting used for both my blog and the ones I'm comparing calls itself (in the &lt;em&gt;Zotero&lt;/em&gt; interface) "Embedded Metadata." A bit of filename skimming leads us to &lt;a href="https://github.com/zotero/translators/blob/master/Embedded%20Metadata.js"&gt;a likely JavaScript source file named "Embedded Metadata.js"&lt;/a&gt;. Searching in page for the string "blog," we discover quickly that our guess about &lt;a href="https://github.com/zotero/translators/blob/beb41ffeb07290e8937a0b99d313a868783487ab/Embedded%20Metadata.js#L272"&gt;special handling for &lt;em&gt;WordPress&lt;/em&gt;&lt;/a&gt; is probably right:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'generator'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;lcValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lcValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'blogger'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
          &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;lcValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wordpress'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
          &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;lcValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wooframework'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;generatorType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'blogPost'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;I'm not fluent in &lt;a href="https://en.wikipedia.org/wiki/JavaScript"&gt;JavaScript&lt;/a&gt;, but searching around for how &lt;code&gt;generatorType&lt;/code&gt; seems to get used elsewhere (it only appears in this file), it's pretty clear that, in the absence of any other indicia, &lt;em&gt;Zotero&lt;/em&gt; will always interpret an HTML page that claims to have been generated by &lt;em&gt;WordPress&lt;/em&gt; as a blog post:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;      &lt;span class="nx"&gt;rdf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultUnknownType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hwType&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;hwTypeGuess&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;generatorType&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; 
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;"webpage"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Indeed, in &lt;a href="http://ruthtillman.com/blog/"&gt;the WordPress blog we were examining previously (ruthtillman.com)&lt;/a&gt;, posts include a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; element in the HTML header that identifies the creating application:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"generator"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"WordPress 4.9.5"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;The &lt;em&gt;Nikola&lt;/em&gt; theme I'm using also writes a generator tag for my blog posts, but as &lt;em&gt;Nikola&lt;/em&gt; can be used to create non-blog sites, it's not appropriate for the &lt;em&gt;Zotero&lt;/em&gt; translator to force the item type in this way.&lt;/p&gt;
&lt;h3&gt;Now what?&lt;/h3&gt;
&lt;p&gt;Well, given that the variable name &lt;code&gt;rdf.defaultUnknownType&lt;/code&gt; contains the word "default," presumably there are other ways in which the &lt;code&gt;itemType&lt;/code&gt; can be determined. In fact, just a few lines down, we find the promising invocation of a JavaScript function named &lt;code&gt;rdf.detectType&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="nx"&gt;_itemType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;rdf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detectType&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt;&lt;span class="nx"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],{})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;rdf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultUnknownType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;More searching leads us to another source file in the same repository, &lt;a href="https://github.com/zotero/translators/blob/beb41ffeb07290e8937a0b99d313a868783487ab/RDF.js#L263"&gt;RDF.js. wherein the function &lt;code&gt;detectType&lt;/code&gt; is defined&lt;/a&gt;. &lt;a href="https://github.com/zotero/translators/blob/beb41ffeb07290e8937a0b99d313a868783487ab/RDF.js#L722"&gt;At the very bottom of this function&lt;/a&gt;, we see that the value of an internal variable named &lt;code&gt;itemType&lt;/code&gt; is returned by the function. We need to find out how it gets set to "blogPost". Reading backward from this point, we quickly come across a big assignment:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;itemType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zotero&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bib&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eprints&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;og&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dc&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; 
    &lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultUnknownType&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoteroGuess&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bibGuess&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; 
    &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prismGuess&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ogGuess&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dcGuess&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;There must be code further above that line that sets one or more of the variables on the right-hand side of the assignment to "blogPost". I don't want to read this whole function, so let's search for the string "blogPost". &lt;a href="https://github.com/zotero/translators/blob/beb41ffeb07290e8937a0b99d313a868783487ab/RDF.js#L633"&gt;There it is&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="c1"&gt;//PRISM:genre&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getFirstResults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;"genre"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism2_0&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;"genre"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism2_1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;"genre"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'abstract'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'acknowledgements'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'authorbio'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'bibliography'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'tableofcontents'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'bookSection'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'autobiography'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'biography'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'book'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'blogentry'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'blogPost'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'homepage'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'webliography'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'webpage'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'interview'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'interview'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'letters'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prism&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'letter'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'adaptation'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'analysis'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prismGuess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'journalArticle'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'column'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'newsbulletin'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'opinion'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;//magazine or newspaper&lt;/span&gt;
      &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prismGuess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'newspaperArticle'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'coverstory'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'essay'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'feature'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'insidecover'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;//journal or magazine&lt;/span&gt;
      &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prismGuess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'magazineArticle'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;My takeaway from this slap-dash bit of code forensics is that we need to figure out how to embed some &lt;abbr title="Resource Description Framework"&gt;RDF&lt;/abbr&gt; metadata that uses &lt;a href="https://www.idealliance.org/specification/prism"&gt;the &lt;abbr title="Publishing Requirements for Industry Standard Metadata"&gt;PRISM&lt;/abbr&gt; vocabulary&lt;/a&gt; to assert that the "genre" of our blog posts is "blogentry."&lt;/p&gt;
&lt;p&gt;Stay tuned to &lt;a href="https://paregorios.org/categories/zotero"&gt;my &lt;em&gt;Zotero&lt;/em&gt; tag&lt;/a&gt; for the next dispatch ...&lt;/p&gt;&lt;/div&gt;</description><category>html</category><category>javascript</category><category>metadata</category><category>microblogging</category><category>nikola</category><category>prism</category><category>rdf</category><category>wordpress</category><category>zotero</category><guid>https://paregorios.org/posts/2018/04/what-zotero-wants/</guid><pubDate>Fri, 27 Apr 2018 10:33:37 GMT</pubDate></item><item><title>Blogs that work with Zotero</title><link>https://paregorios.org/posts/2018/04/blogs-work-zotero/</link><dc:creator>Tom Elliott</dc:creator><description>&lt;div&gt;&lt;p&gt;I noticed that posts on my blog don't capture smoothly into &lt;a href="https://zotero.org"&gt;&lt;em&gt;Zotero&lt;/em&gt;&lt;/a&gt; (i.e., I have to edit the records in &lt;em&gt;Zotero&lt;/em&gt; after I capture them). So, I want to fix my theme so this is no longer a problem and then contribute that modified theme back to the &lt;a href="https://getnikola.com"&gt;&lt;em&gt;Nikola&lt;/em&gt;&lt;/a&gt; community.&lt;/p&gt;
&lt;p&gt;Step one (this post): look at some blogs and figure out which ones work well with &lt;em&gt;Zotero&lt;/em&gt; and figure out why.&lt;!-- TEASER_END --&gt;&lt;/p&gt;
&lt;h3&gt;Does &lt;em&gt;Zotero&lt;/em&gt; recognize a blog post as a blog post?&lt;/h3&gt;
&lt;p&gt;If &lt;a href="https://www.zotero.org/download/"&gt;the &lt;em&gt;Zotero&lt;/em&gt; Connector plugin&lt;/a&gt; in the browser knows it is dealing with a blog post, it will display a blog post icon in the browser toolbar. But on my blog posts, &lt;em&gt;Zotero&lt;/em&gt; shows me the more generic "web page" icon:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screen capture showing part of the Firefox browser's toolbar. A mouse pointer icon is displayed, hovering over the Zotero button in the browser toolbar. The Zotero button displays an icon connoting a 'web page': a rectangle with a light blue border and internal shading. A help kite reads 'Save to Zotero (Embedded Metadata).'" src="https://paregorios.org/images/blog_zotero/zotero_generic.png"&gt;&lt;/p&gt;
&lt;p&gt;When I capture a reference to &lt;em&gt;Zotero&lt;/em&gt; from such a post, I do indeed get a record that's typed as a "web page":&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screen capture showing the 'info' portion of the Zotero user interface. It contains data translated from a page on the paregorios.org blog. The 'Item Type' field reads 'Web Page'." src="https://paregorios.org/images/blog_zotero/zotero_record_mine.png"&gt;&lt;/p&gt;
&lt;p&gt;I see this behavior on &lt;a href="https://sgillies.net/"&gt;Sean Gillies' blog&lt;/a&gt; too, which also looks to be running the default &lt;a href="https://themes.getnikola.com/v8/bootstrap3/"&gt;Nikola "Bootstrap 3" theme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But on &lt;a href="http://ruthtillman.com/blog/"&gt;Ruth Kitchin Tillman's blog&lt;/a&gt;, we see that &lt;em&gt;Zotero&lt;/em&gt; has figured out it's looking at a blog post:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screen capture showing part of the Firefox browser's toolbar. A mouse pointer icon is displayed, hovering over the _Zotero_ button in the browser toolbar. The Zotero button displays an icon connoting a 'blog post': a rectangle with a grey border, within which a horizontal band of orange and black appears above a few horizontal lines of grey. A help kite reads 'Save to Zotero (Embedded Metadata).'" src="https://paregorios.org/images/blog_zotero/zotero_post.png"&gt;&lt;/p&gt;
&lt;p&gt;And, as we would expect, the resulting &lt;em&gt;Zotero&lt;/em&gt; record is auto-classified as a "blog post":&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screen capture showing the 'info' portion of the Zotero user interface. It contains data translated from a page on the ruthtillman.com blog. The 'Item Type' field reads 'Blog Post'." src="https://paregorios.org/images/blog_zotero/zotero_record_rkt.png"&gt;&lt;/p&gt;
&lt;h3&gt;What's different?&lt;/h3&gt;
&lt;p&gt;My first thought, since the &lt;em&gt;Zotero&lt;/em&gt; browser plugin says it's using "embedded metadata" in both cases, is to have a look at &lt;a href="https://en.wikipedia.org/wiki/Meta_element"&gt;the "meta" elements&lt;/a&gt; in the HTML "head" in each of the posts. Leaving aside technical metadata about character set, view ports and so forth, the following differences can be noted:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Both sites are embedding &lt;code&gt;meta@property&lt;/code&gt; terms from &lt;a href="http://ogp.me/"&gt;the Open Graph Protocol&lt;/a&gt; namespace (http://ogp.me/ns/#), including its "article" object (http://ogp.me/ns/article#).&lt;/li&gt;
&lt;li&gt;The only difference I see with Open Graph is that ruthtillman.com uses &lt;code&gt;property="article.section"&lt;/code&gt; whereas paregorios.org uses &lt;code&gt;property="article.tag"&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Ruthtillman.com also embeds &lt;code&gt;meta@name&lt;/code&gt; terms conforming to the "Summary" &lt;a href="https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/abouts-cards.html"&gt;Twitter Cards&lt;/a&gt; convention (creator, description, image, site, title). Paregorios.org doesn't make use of these.&lt;/li&gt;
&lt;li&gt;Paregorios.org embeds un-namespaced &lt;code&gt;meta@name terms&lt;/code&gt; for "author" and "description," but ruthtillman.com doesn't.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, unless there's some heuristic encoded into &lt;a href="https://www.zotero.org/support/translators"&gt;the &lt;em&gt;Zotero&lt;/em&gt; translator&lt;/a&gt; that comes to a different conclusion about these two sets of &lt;code&gt;meta&lt;/code&gt; tags, something else must be at play. Either there's a different kind of metadata that it finds elsewhere in the posts on ruthtillman.com that it interprets as indicative of a blog post, or it notices that it's looking at WordPress output and infers "blog" from that. &lt;/p&gt;
&lt;h3&gt;Now what?&lt;/h3&gt;
&lt;p&gt;In any case, I guess it's time to go snooping around in &lt;a href="https://github.com/zotero/translators/blob/master/Embedded%20Metadata.js"&gt;the &lt;em&gt;Zotero&lt;/em&gt; code&lt;/a&gt; to see what we can find.&lt;/p&gt;
&lt;p&gt;Stay tuned to &lt;a href="https://paregorios.org/categories/zotero/"&gt;my &lt;em&gt;Zotero&lt;/em&gt; tag&lt;/a&gt; for updates ...&lt;/p&gt;&lt;/div&gt;</description><category>html</category><category>metadata</category><category>microblogging</category><category>nikola</category><category>wordpress</category><category>zotero</category><guid>https://paregorios.org/posts/2018/04/blogs-work-zotero/</guid><pubDate>Thu, 26 Apr 2018 18:31:57 GMT</pubDate></item></channel></rss>