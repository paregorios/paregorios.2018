<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>paregorios.org (Posts about awol)</title><link>https://paregorios.org/</link><description></description><atom:link href="https://paregorios.org/categories/awol.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2018 &lt;a href="mailto:ipse@paregorios.org"&gt;Tom Elliott&lt;/a&gt; 
&lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;&lt;img
alt="Creative Commons License" style="border-width:0"
src="https://i.creativecommons.org/l/by/4.0/80x15.png" /&gt;&lt;/a&gt;
&lt;span xmlns:dct="http://purl.org/dc/terms/"
property="dct:title"&gt;&lt;strong&gt;&lt;em&gt;paregorios.org&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt; by
&lt;a xmlns:cc="http://creativecommons.org/ns#" href="https://paregorios.org/me"
property="cc:attributionName" rel="cc:attributionURL"&gt;Tom Elliott&lt;/a&gt; is
licensed under a &lt;a rel="license"
href="http://creativecommons.org/licenses/by/4.0/"&gt;Creative Commons
Attribution 4.0 International License&lt;/a&gt;.
</copyright><lastBuildDate>Sun, 06 May 2018 12:25:46 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Mining AWOL more carefully for ISSNs</title><link>https://paregorios.org/posts/2014/04/mining-awol-more-carefully-for-issns/</link><dc:creator>Tom Elliott</dc:creator><description>&lt;p&gt;I made a couple of bad assumptions in &lt;a href="http://horothesia.blogspot.com/2014/04/mining-awol-for-identifiers.html"&gt;my previous attempt to mine ISSNs&lt;/a&gt; out of the content of the &lt;a href="http://ancientworldonline.blogspot.com/"&gt;AWOL Blog&lt;/a&gt;:&lt;br&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;I assumed that the string "ISSN" would always appear in all caps.&lt;/li&gt;&lt;li&gt;I assumed that the string "ISSN" would be followed immediately by a colon (:).&lt;/li&gt;&lt;/ol&gt;In fact, the following command indicates there are at least 673 posts containing instances of the string (ignoring capitalization) "issn" in the AWOL content:&lt;br&gt;&lt;blockquote class="tr_bq"&gt;&lt;span style='font-family: "Courier New",Courier,monospace;'&gt;ack -hilo issn  post-*.xml | wc -l&lt;/span&gt;&lt;/blockquote&gt; In an attempt to make sure we're capturing real ISSN strings, I refined the regular expression to try to capture a leading "ISSN" string, and then everything possibly following until and including a properly formatted ISSN number. I've seen both ####-#### and ########, (where # is either a digit or the character "X") in the wild, so I accommodated both possibilities. Here's the command:&lt;br&gt;&lt;blockquote class="tr_bq"&gt;&lt;span style='font-family: "Courier New",Courier,monospace;'&gt;ack -hio 'issn[^\d]*[\dX]{4}-?[\dX]{4}' post-*.xml &amp;gt; issn-raw.txt&lt;/span&gt;&lt;/blockquote&gt;&lt;a href="https://github.com/paregorios/awol-acronyms/blob/master/issn-raw.txt"&gt;You can see the raw list of the matched strings here&lt;/a&gt;. If we count the lines generated by that command instead of saving them to file, we can see that there are at least 1931 ISSNs in AWOL.&lt;br&gt;&lt;blockquote class="tr_bq"&gt;&lt;span style='font-family: "Courier New",Courier,monospace;'&gt;ack -hio 'issn[^\d]*[\dX]{4}-?[\dX]{4}' post-*.xml | wc -l&lt;/span&gt;&lt;/blockquote&gt;Then I wondered, are we getting just one ISSN per file or multiples? We know that some of  the posts in the blog are about single resources, but there are also  plenty of posts about collections and also posts that gather up all the  references to every known instance of a particular genre (e.g.,  open-access journals or journals in JSTOR). So I modified the command to count how many files have these "well-formed" ISSN strings in them (the -l option to ack):&lt;br&gt;&lt;blockquote class="tr_bq"&gt;&lt;span style='font-family: "Courier New",Courier,monospace;'&gt;ack -hilo 'issn[^\d]*[\dX]{4}-?[\dX]{4}' post-*.xml | wc -l&lt;/span&gt;&lt;/blockquote&gt;For a total of 638 affected files. &lt;a href="https://github.com/paregorios/awol-acronyms/blob/master/issn-files.txt"&gt;Here's a list of the affected files&lt;/a&gt;, for future team reference.&lt;br&gt;&lt;br&gt;One wonders about the discrepancy between 638 and 673, but at least I know I now have a regular expression that can capture most of the ISSNs and their values. I'll do some spot-checking later to see if I can figure out what's being missed and why.&lt;br&gt;&lt;br&gt;More importantly, it's now very clear that mining the ISSNs out of the blog posts on our way to &lt;a href="http://zotero.org/"&gt;Zotero&lt;/a&gt; is a worthwhile task. Not only will we be able to add them to the records, we may also be able to use them to look up existing catalog data from other databases with which to better populate the fields in the corresponding Zotero records.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</description><category>ack</category><category>awol</category><category>horothesia</category><category>issn</category><category>thpppt</category><category>zotero</category><guid>https://paregorios.org/posts/2014/04/mining-awol-more-carefully-for-issns/</guid><pubDate>Sat, 12 Apr 2014 02:24:00 GMT</pubDate></item><item><title>Mining AWOL for Identifiers</title><link>https://paregorios.org/posts/2014/04/mining-awol-for-identifiers/</link><dc:creator>Tom Elliott</dc:creator><description>&lt;span style="color: red;"&gt;&lt;b&gt;NB: There is now a follow-up post to this one, in which various bad assumptions made here are addressed: "&lt;a href="http://horothesia.blogspot.com/2014/04/mining-awol-more-carefully-for-issns.html"&gt;Mining AWOL more carefully for ISSNs&lt;/a&gt;". &lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;In collaboration with &lt;a href="https://www.linkedin.com/in/pavanatri"&gt;Pavan Artri&lt;/a&gt;, &lt;a href="http://isaw.nyu.edu/people/staff/dawn-gross"&gt;Dawn Gross&lt;/a&gt;, &lt;a href="http://www.libraries.psu.edu/psul/staffdirectory.html?uid=cej14"&gt;Chuck Jones&lt;/a&gt;, &lt;a href="https://www.linkedin.com/pub/ronak-parpani/42/195/241"&gt;Ronak Parpani&lt;/a&gt;, and &lt;a href="http://isaw.nyu.edu/about/news/david-ratzan-becomes-isaws-head-of-library"&gt;David Ratzan&lt;/a&gt;, I'm currently working on a project to port the content of&lt;a href="http://ancientworldonline.blogspot.com/"&gt; Chuck's &lt;i&gt;Ancient World Online (AWOL)&lt;/i&gt; blog&lt;/a&gt; to a &lt;a href="https://www.zotero.org/"&gt;Zotero&lt;/a&gt; library. Funded in part by a grant from the &lt;a href="http://delmas.org/"&gt;Gladys Krieble Delmas Foundation&lt;/a&gt;, the idea is to make the information Chuck gathers available for more structured data needs, like citation generation, creation of library catalog records, and participation in linked data graphs. So far, we have code that successfully parses the &lt;a href="http://en.wikipedia.org/wiki/Atom_%28standard%29"&gt;Atom XML&lt;/a&gt; "backup" file we can get from Blogger and uses the &lt;a href="https://www.zotero.org/support/dev/server_api/v2/start"&gt;Zotero API&lt;/a&gt; to create a Zotero record for each blog post and to populate its title (derived from the title of the post), url (the first link we find in the body of the post), and tags (pulled from the Blogger "labels").&lt;br&gt;&lt;br&gt;We know that some of the post bodies also contain standard numbers (like &lt;a href="http://en.wikipedia.org/wiki/International_Standard_Serial_Number"&gt;ISSNs&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/International_Standard_Book_Number"&gt;ISBNs&lt;/a&gt;), but it has been unclear how many of them there are and how regular the structure of text strings in which they appear. Would it be worthwhile to try to mine them out programmatically and insert them into the Zotero records as well? If so, what's our best strategy for capturing them ... i.e., what sort of parenthetical remarks, whitespace, and punctuation might intervene between them and the corresponding values? Time to do some data prospecting ...&lt;br&gt;&lt;br&gt;We'd previously split the monolithic "backup" XML file into &lt;a href="https://github.com/paregorios/awol-backup"&gt;individual XML files, one per post &lt;/a&gt;(click at your own risk; there are a lot of files in that github listing and your browser performance in rendering the page and its JavaScript may vary). Rather than writing a script to parse all that stuff just to figure out what's going on, I decided to try my new favorite can-opener, &lt;a href="http://beyondgrep.com/"&gt;ack&lt;/a&gt; (previously installed stresslessly on my Mac with another great tool, the &lt;a href="http://brew.sh/"&gt;Homebrew package manager&lt;/a&gt;).&lt;br&gt;&lt;br&gt;Time for some fun with &lt;a href="http://en.wikipedia.org/wiki/Regular_expression"&gt;regular expressions&lt;/a&gt;! I worked on this part iteratively, trying to start out as liberally as possible, thereby letting in a lot of irrelevant stuff so as not to miss anything good. I assumed that we want to catch acronyms, so strings of two or more capital letters, preceded by a word boundary. I didn't want to just use a [A-Z] range, since AWOL indexes multilingual resources, so I had recourse to the &lt;a href="http://www.regular-expressions.info/unicode.html"&gt;Unicode Categories feature&lt;/a&gt; that's available in most modern regular expression engines, including recent versions of &lt;a href="http://en.wikipedia.org/wiki/Perl"&gt;Perl&lt;/a&gt; (on which ack relies). So, I started off with:&lt;br&gt;&lt;blockquote class="tr_bq"&gt;&lt;span style='font-family: "Courier New",Courier,monospace;'&gt;\b\p{Lu}\p{Lu}+&lt;/span&gt;&lt;/blockquote&gt;After some iteration on the results, I ended up with something more complex, trying to capture anything that fell between the acronym itself and the first subsequent colon, which seemed to be the standard delimiter between the designation+explanation of the type of identifier and the identifying value itself. I figure we'll worry how to parse the value later, once we're sure which identifiers we want to capture. So, here's the regex I ultimately used:&lt;br&gt;&lt;blockquote class="tr_bq"&gt;&lt;span style='font-family: "Courier New",Courier,monospace;'&gt;\b\p{Lu}\p{Lu}+[:\s][^\b\p{P}]*[\b\:]&lt;/span&gt;&lt;/blockquote&gt;The full ack command looked like this:&lt;br&gt;&lt;blockquote class="tr_bq"&gt;&lt;span style='font-family: "Courier New",Courier,monospace;'&gt;ack -oh "\b\p{Lu}\p{Lu}+[:\s][^\b\p{P}]*[\b\:]" post-*.xml &amp;gt; ../awol-acronyms/raw.txt&lt;/span&gt;&lt;/blockquote&gt;where the &lt;span style='font-family: "Courier New",Courier,monospace;'&gt;-h&lt;/span&gt; option telling ack to "suppress the prefixing of filenames on output when multiple files are searched" and the &lt;span style='font-family: "Courier New",Courier,monospace;'&gt;-o&lt;/span&gt; option telling ack to "show only the part of each line matching" my regex pattern (quotes from the ack man page). &lt;a href="https://github.com/paregorios/awol-acronyms/blob/master/raw.txt"&gt;You can browse the raw results here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;So, how to get this text file into a more analyzable state? First, I thought I'd pull it into my text editor, &lt;a href="http://www.sublimetext.com/"&gt;Sublime&lt;/a&gt;, and use its text manipulation functions to filter for unique lines and then sort them. But then, it occurred to me that I really wanted to know frequency of identifier classes across the whole of the blog content, so I turned to &lt;a href="http://openrefine.org/"&gt;OpenRefine&lt;/a&gt;.&lt;br&gt;&lt;br&gt;I followed OR's standard process for importing a text file (being sure to set the right character encoding for the file on which I was working). Then, I used the column edit functionality and the string manipulation functions in the Open Refine Expression Language (abbreviated GREL because it used to be called "Google Refine Expression Language") to clean up the strings (regularizing whitespace, trimming leading and trailing whitespace, converting everything to uppercase, and getting rid of whitespace immediately preceding colons). That part could all have been done in a step outside OR with other tools, but I didn't think about it until I was already there.&lt;br&gt;&lt;br&gt;Then came the part OR is actually good at, faceting the data (i.e., getting all the unique strings and counts of same). I then used the GREL facetCount() function to get those values into the table itself, &lt;a href="http://googlerefine.blogspot.com/2011/08/remove-duplicate.html"&gt;followed this recipe to get rid of matching rows in the data&lt;/a&gt;, and exported &lt;a href="https://github.com/paregorios/awol-acronyms/blob/master/facetcounts.csv"&gt;a CSV file of the unique terms and their counts&lt;/a&gt; (github's default display for CSV makes our initial column very wide, so you may have to click on the "raw" link to see all the columns of data).&lt;br&gt;&lt;br&gt;There are some things that need investigating, but what strikes me is that apparently only ISSN is probably worth capturing programmatically. ISSNs appear 44 times in 14 different variations:&lt;br&gt;&lt;br&gt;&lt;style&gt;table {  }td { padding-top: 1px; padding-right: 1px; padding-left: 1px; color: black; font-size: 12pt; font-weight: 400; font-style: normal; text-decoration: none; font-family: Calibri,sans-serif; vertical-align: bottom; border: medium none; white-space: nowrap; }&lt;/style&gt;    &lt;br&gt;&lt;table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; width: 130px;"&gt;  &lt;colgroup&gt;&lt;col span="2" style="width: 65pt;" width="65"&gt; &lt;/colgroup&gt;&lt;tbody&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt; width: 65pt;" width="65"&gt;ISSN:&lt;/td&gt;  &lt;td align="right" style="width: 65pt;" width="65"&gt;17&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN paper:&lt;/td&gt;  &lt;td align="right"&gt;9&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN electrònic:&lt;/td&gt;  &lt;td align="right"&gt;4&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN electronic edition:&lt;/td&gt;  &lt;td align="right"&gt;2&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN electrónico:&lt;/td&gt;  &lt;td align="right"&gt;2&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN électronique:&lt;/td&gt;  &lt;td align="right"&gt;2&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN impreso:&lt;/td&gt;  &lt;td align="right"&gt;2&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN Online:&lt;/td&gt;  &lt;td align="right"&gt;2&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN edición electrónica:&lt;/td&gt;  &lt;td align="right"&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN format papier:&lt;/td&gt;  &lt;td align="right"&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN Print:&lt;/td&gt;  &lt;td align="right"&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISSN print edition:&lt;/td&gt;  &lt;td align="right"&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ONLINE ISSN:&lt;/td&gt;  &lt;td align="right"&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;PRINT ISSN:&lt;/td&gt;  &lt;td align="right"&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;Compare ISBNs:&lt;br&gt;&lt;br&gt;&lt;style&gt;table {  }td { padding-top: 1px; padding-right: 1px; padding-left: 1px; color: black; font-size: 12pt; font-weight: 400; font-style: normal; text-decoration: none; font-family: Calibri,sans-serif; vertical-align: bottom; border: medium none; white-space: nowrap; }.xl63 { text-align: left; }&lt;/style&gt;    &lt;br&gt;&lt;table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; width: 130px;"&gt;  &lt;colgroup&gt;&lt;col style="width: 65pt;" width="65"&gt; &lt;col style="width: 65pt;" width="65"&gt; &lt;/colgroup&gt;&lt;tbody&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt; width: 65pt;" width="65"&gt;ISBN of Second Part:&lt;/td&gt;  &lt;td class="xl63" style="width: 65pt;" width="65"&gt;2&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISBN:&lt;/td&gt;  &lt;td class="xl63"&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr height="15" style="height: 15.0pt;"&gt;  &lt;td height="15" style="height: 15.0pt;"&gt;ISBN Compiled by:&lt;/td&gt;  &lt;td class="xl63"&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;&lt;a href="http://en.wikipedia.org/wiki/Digital_object_identifier"&gt;DOIs&lt;/a&gt; make only one appearance, and there are no Library of Congress cataloging numbers.&lt;br&gt;&lt;br&gt;Now to point my collaborators at this blog post and see if they agree with me... &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</description><category>ack</category><category>atom</category><category>awol</category><category>blogs</category><category>efficiency</category><category>horothesia</category><category>LOD</category><category>patterns</category><category>refine</category><category>thpppt</category><category>xml</category><category>zotero</category><guid>https://paregorios.org/posts/2014/04/mining-awol-for-identifiers/</guid><pubDate>Fri, 11 Apr 2014 22:37:00 GMT</pubDate></item></channel></rss>